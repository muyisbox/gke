substitutions:
  _TF_VERSION: '1.0.0'
  _WORKSPACES: 'dev,staging,gitops'  # Correct format for substitution
options:
  dynamicSubstitutions: true
  # automapSubstitutions: true

steps:
  - id: 'branch name'
    name: 'alpine'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
        echo "***********************"
        echo "Branch Name: $BRANCH_NAME"
        echo "***********************"

  - id: 'setup and plan'
    name: 'hashicorp/terraform:${_TF_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # Convert comma-separated list to array
        IFS=',' read -r -a workspaces <<< "${_WORKSPACES}"
        for WORKSPACE in "${workspaces[@]}"; do
          # Initialize Terraform
          terraform init

          # Create workspace if it doesn't exist
          terraform workspace select $WORKSPACE 2>/dev/null || terraform workspace new $WORKSPACE

          # Validate Terraform configuration
          terraform validate

          # Plan Terraform
          terraform plan -var="compute_engine_service_account=terraform@$PROJECT_ID.iam.gserviceaccount.com" -var="project_id=$PROJECT_ID" -out=tfplan_$WORKSPACE
        done

  - id: 'apply'
    name: 'hashicorp/terraform:${_TF_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" ]]; then
          IFS=',' read -r -a workspaces <<< "${_WORKSPACES}"
          for WORKSPACE in "${workspaces[@]}"; do
            terraform apply -auto-approve tfplan_$WORKSPACE
          done
        else
          echo "Skipping apply on branch $BRANCH_NAME"

  - id: 'destroy'
    name: 'hashicorp/terraform:${_TF_VERSION}'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "destroy-all" ]]; then
          echo "Preparing to destroy all resources..."
          read -p "Are you sure you want to destroy all resources? (yes/no): " CONFIRM
          if [[ "$CONFIRM" == "yes" ]]; then
            IFS=',' read -r -a workspaces <<< "${_WORKSPACES}"
            for WORKSPACE in "${workspaces[@]}"; do
              terraform destroy -auto-approve -var="compute_engine_service_account=terraform@$PROJECT_ID.iam.gserviceaccount.com" -var="project_id=$PROJECT_ID"
            done
          fi
        else
          echo "Destroy operation not allowed on this branch."
